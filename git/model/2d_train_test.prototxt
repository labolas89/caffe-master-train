name: "2d_train_test_net"
layer {
  name: "2d_data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include: { phase: TRAIN }
  hdf5_data_param {
    source: "git/data/train_datalist_new2d.txt"
    batch_size: 900
    shuffle: true
  }
}
layer {
  name: "2d_data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include: { phase: TEST }
  hdf5_data_param {
    source: "git/data/test_datalist_new2d.txt"
    batch_size: 900
    shuffle: true
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 8
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 8
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 8
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "conv3"
  top: "ip1"
  inner_product_param {
    num_output: 8
      weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  accuracy_param {
    top_k: 1
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
#layer {
#  name: "prob"
#  type: "Softmax"
#  bottom: "ip2"
#  top: "prob"
#  include: { phase: TEST }
#}
#layer {
#  name: "argmax"
#  type: "ArgMax"
#  bottom: "prob"
#  top: "argmax"
#  argmax_param {
#    top_k: 3
#  }
#  include: { phase: TEST }
#}
